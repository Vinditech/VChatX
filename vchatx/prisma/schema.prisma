generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  users             users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model audit_logs {
  id             String        @id
  organizationId String
  userId         String?
  action         String
  resource       String
  resourceId     String?
  details        Json?
  ipAddress      String?
  userAgent      String?
  createdAt      DateTime      @default(now())
  organizations  organizations @relation(fields: [organizationId], references: [id])
}

model organizations {
  id                 String               @id
  name               String
  slug               String               @unique
  domain             String?              @unique
  planId             String
  isActive           Boolean              @default(true)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  contractId         String?              @unique
  document           String?
  fantasyName        String?
  approvalStatus     ApprovalStatus       @default(PENDING)
  approvedAt         DateTime?
  approvedBy         String?
  contactEmail       String?
  contactWhatsapp    String?
  notes              String?
  rejectedAt         DateTime?
  rejectedBy         String?
  rejectionReason    String?
  audit_logs         audit_logs[]
  plans              plans                @relation(fields: [planId], references: [id])
  usage_tracking     usage_tracking[]
  users              users[]
  whatsapp_instances whatsapp_instances[]
}

model plans {
  id                     String          @id
  name                   String
  slug                   String          @unique
  description            String?
  price                  Decimal         @db.Decimal(10, 2)
  currency               String          @default("BRL")
  maxUsers               Int             @default(1)
  maxWhatsAppInstances   Int             @default(1)
  hasAdvancedAnalytics   Boolean         @default(false)
  hasApiAccess           Boolean         @default(false)
  hasPrioritySupport     Boolean         @default(false)
  hasCustomIntegrations  Boolean         @default(false)
  isActive               Boolean         @default(true)
  createdAt              DateTime        @default(now())
  updatedAt              DateTime
  allowNewSignups        Boolean         @default(true)
  displayOrder           Int             @default(0)
  features               Json?
  hasCustomBranding      Boolean         @default(false)
  hasMultipleAdmins      Boolean         @default(false)
  hasWhatsAppAutomation  Boolean         @default(false)
  isPublic               Boolean         @default(true)
  isRecommended          Boolean         @default(false)
  limitations            Json?
  maxActiveOrganizations Int?
  maxStorageGB           Int             @default(1)
  type                   PlanType
  customDescription      String?
  customFeatures         Json?
  customName             String?
  customPrice            Decimal?        @db.Decimal(10, 2)
  customizations         Json?
  customizedAt           DateTime?
  customizedBy           String?
  isCustomized           Boolean         @default(false)
  endDate                DateTime?
  isIndefinite           Boolean         @default(true)
  startDate              DateTime?
  organizations          organizations[]
}

model sessions {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  users        users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model usage_tracking {
  id                 String              @id
  organizationId     String
  whatsappInstanceId String?
  resourceType       ResourceType
  usageCount         Int                 @default(0)
  period             String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime
  organizations      organizations       @relation(fields: [organizationId], references: [id])
  whatsapp_instances whatsapp_instances? @relation(fields: [whatsappInstanceId], references: [id])

  @@unique([organizationId, resourceType, period])
}

model users {
  id                  String         @id
  email               String         @unique
  name                String?
  image               String?
  organizationId      String?
  role                UserRole       @default(USER)
  isActive            Boolean        @default(true)
  emailVerified       DateTime?
  createdAt           DateTime       @default(now())
  updatedAt           DateTime
  onboardingCompleted Boolean        @default(false)
  password            String
  isVinditechRoot     Boolean        @default(false)
  lastRootAccess      DateTime?
  rootPermissions     Json?
  accounts            accounts[]
  sessions            sessions[]
  organizations       organizations? @relation(fields: [organizationId], references: [id])
}

model verification_tokens {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model whatsapp_instances {
  id                    String           @id
  name                  String
  instanceKey           String           @unique
  phoneNumber           String?
  qrCode                String?
  status                InstanceStatus   @default(DISCONNECTED)
  organizationId        String
  evolutionInstanceName String?
  evolutionApiKey       String?
  webhookUrl            String?
  isActive              Boolean          @default(true)
  createdAt             DateTime         @default(now())
  updatedAt             DateTime
  accessTokenWaBusiness String?
  integration           String           @default("WHATSAPP-BAILEYS")
  webhookWaBusiness     String?
  usage_tracking        usage_tracking[]
  organizations         organizations    @relation(fields: [organizationId], references: [id])
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
  CONTACTED
}

enum InstanceStatus {
  CONNECTING
  CONNECTED
  DISCONNECTED
  ERROR
}

enum PlanType {
  FREE
  STARTER
  PROFESSIONAL
  ENTERPRISE
}

enum ResourceType {
  MESSAGES_SENT
  PHONE_NUMBERS
  API_CALLS
  STORAGE_USAGE
}

enum UserRole {
  OWNER
  ADMIN
  USER
  VINDITECH_ROOT
}
